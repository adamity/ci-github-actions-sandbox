name: Staging
run-name: Run CI/CD Cycle for Staging Environment
on:
  push:
    branches:
      - develop
jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - run: echo "This job is triggered by a push to the develop branch"
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup .env file
        run: echo "CI_ENVIRONMENT=development" >> .env && echo "app.baseURL='http://example.com'" >> .env
      - name: Show .env file
        run: cat .env
      - name: Set permissions for logs directory recursively to avoid permission errors
        run: chmod -R 777 ${{ github.workspace }}/writable/logs
      - name: Install dependencies
        run: composer install
      - name: Run PHPUnit tests
        run: ${{ github.workspace }}/vendor/bin/phpunit

  deploy:
    needs: build-and-test
    name: Deploy to Staging
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: unnecessary
      - name: Adding Known Hosts
        run: ssh-keyscan -p ${{ secrets.SSH_PORT}} -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Access Staging Server, Pull from GitHub and Install Dependencies
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          cd ${{ secrets.SSH_PATH }} && git pull &&
          echo COMPOSER_ALLOW_SUPERUSER = 1 composer install"
      # - name: Update Staging by pulling from GitHub
      #   run: "cd ${{ secrets.SSH_PATH }} && git pull"
      # - name: Install dependencies
      #   run: cd ${{ secrets.SSH_PATH }} && composer install
